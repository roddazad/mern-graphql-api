[{"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/index.js":"1","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/App.js":"2","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/Navbar.js":"3","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SearchBooks.js":"4","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SavedBooks.js":"5","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/SignupForm.js":"6","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/LoginForm.js":"7","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/auth.js":"8","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/API.js":"9","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/mutations.js":"10","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/localStorage.js":"11","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/queries.js":"12"},{"size":266,"mtime":1677551142183,"results":"13","hashOfConfig":"14"},{"size":1422,"mtime":1678769338960,"results":"15","hashOfConfig":"14"},{"size":2524,"mtime":1677551142182,"results":"16","hashOfConfig":"14"},{"size":4811,"mtime":1678479997273,"results":"17","hashOfConfig":"14"},{"size":3448,"mtime":1678769443065,"results":"18","hashOfConfig":"14"},{"size":3345,"mtime":1678770194586,"results":"19","hashOfConfig":"14"},{"size":2778,"mtime":1678769393814,"results":"20","hashOfConfig":"14"},{"size":1234,"mtime":1677551142183,"results":"21","hashOfConfig":"14"},{"size":1392,"mtime":1677551142183,"results":"22","hashOfConfig":"14"},{"size":1084,"mtime":1678769280758,"results":"23","hashOfConfig":"14"},{"size":793,"mtime":1677551142183,"results":"24","hashOfConfig":"14"},{"size":176,"mtime":1678769261024,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"s6no02",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/index.js",[],[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/App.js",[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/Navbar.js",[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SearchBooks.js",["65","66"],[],"import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport { SAVE_BOOK } from '../utils/mutations';\nimport Auth from '../utils/auth';\nimport { searchGoogleBooks } from '../utils/API';\nimport { saveBookIds, getSavedBookIds } from '../utils/localStorage';\nimport { useMutation } from '@apollo/client';\n\nconst SearchBooks = () => {\n  // create state for holding returned google api data\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  // create state for holding our search field data\n  const [searchInput, setSearchInput] = useState('');\n\n  // create state to hold saved bookId values\n  const [savedBookIds, setSavedBookIds] = useState(getSavedBookIds());\n\n  const [saveBook, { error, data }] = useMutation(SAVE_BOOK);\n\n  // set up useEffect hook to save `savedBookIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n  useEffect(() => {\n    return () => saveBookIds(savedBookIds);\n  });\n\n  // create method to search for books and set state on form submit\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchGoogleBooks(searchInput);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const { items } = await response.json();\n\n      const bookData = items.map((book) => ({\n        bookId: book.id,\n        authors: book.volumeInfo.authors || ['No author to display'],\n        title: book.volumeInfo.title,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks?.thumbnail || '',\n      }));\n\n      setSearchedBooks(bookData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // create function to handle saving a book to our database\n  const handleSaveBook = async (bookId) => {\n    // find the book in `searchedBooks` state by the matching id\n    const bookToSave = searchedBooks.find((book) => book.bookId === bookId);\n\n    // get token\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBook(bookToSave, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      // if book successfully saves to user's account, save book id to state\n      setSavedBookIds([...savedBookIds, bookToSave.bookId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Search for Books!</h1>\n          <Form onSubmit={handleFormSubmit}>\n            <Form.Row>\n              <Col xs={12} md={8}>\n                <Form.Control\n                  name='searchInput'\n                  value={searchInput}\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type='text'\n                  size='lg'\n                  placeholder='Search for a book'\n                />\n              </Col>\n              <Col xs={12} md={4}>\n                <Button type='submit' variant='success' size='lg'>\n                  Submit Search\n                </Button>\n              </Col>\n            </Form.Row>\n          </Form>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <h2>\n          {searchedBooks.length\n            ? `Viewing ${searchedBooks.length} results:`\n            : 'Search for a book to begin'}\n        </h2>\n        <CardColumns>\n          {searchedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? (\n                  <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' />\n                ) : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  {Auth.loggedIn() && (\n                    <Button\n                      disabled={savedBookIds?.some((savedBookId) => savedBookId === book.bookId)}\n                      className='btn-block btn-info'\n                      onClick={() => handleSaveBook(book.bookId)}>\n                      {savedBookIds?.some((savedBookId) => savedBookId === book.bookId)\n                        ? 'This book has already been saved!'\n                        : 'Save this Book!'}\n                    </Button>\n                  )}\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SearchBooks;\n","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SavedBooks.js",["67","68","69","70","71"],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/SignupForm.js",["72","73"],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/components/LoginForm.js",["74","75"],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/auth.js",["76"],[],"// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/API.js",[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/mutations.js",[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/localStorage.js",[],[],"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/utils/queries.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":18,"column":22,"nodeType":"79","messageId":"80","endLine":18,"endColumn":27},{"ruleId":"77","severity":1,"message":"81","line":18,"column":29,"nodeType":"79","messageId":"80","endLine":18,"endColumn":33},{"ruleId":"77","severity":1,"message":"82","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"78","line":14,"column":24,"nodeType":"79","messageId":"80","endLine":14,"endColumn":29},{"ruleId":"77","severity":1,"message":"83","line":14,"column":31,"nodeType":"79","messageId":"80","endLine":14,"endColumn":39},{"ruleId":"77","severity":1,"message":"84","line":45,"column":11,"nodeType":"79","messageId":"80","endLine":45,"endColumn":18},{"ruleId":"77","severity":1,"message":"85","line":48,"column":9,"nodeType":"79","messageId":"80","endLine":48,"endColumn":13},{"ruleId":"77","severity":1,"message":"78","line":16,"column":24,"nodeType":"79","messageId":"80","endLine":16,"endColumn":29},{"ruleId":"77","severity":1,"message":"81","line":16,"column":31,"nodeType":"79","messageId":"80","endLine":16,"endColumn":35},{"ruleId":"77","severity":1,"message":"78","line":13,"column":23,"nodeType":"79","messageId":"80","endLine":13,"endColumn":28},{"ruleId":"77","severity":1,"message":"81","line":13,"column":30,"nodeType":"79","messageId":"80","endLine":13,"endColumn":34},{"ruleId":"86","severity":1,"message":"87","line":49,"column":1,"nodeType":"88","endLine":49,"endColumn":34},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'bookData' is assigned a value but never used.","'loading' is assigned a value but never used.","'user' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration"]