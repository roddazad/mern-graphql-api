{"ast":null,"code":"var _jsxFileName = \"/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SavedBooks.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\n// import { Navigate, useParams } from 'react-router-dom';\n// import { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SavedBooks = () => {\n  _s();\n  const [userData, setUserData] = useState({});\n  const [deleteBook, {\n    error,\n    bookData\n  }] = useMutation(REMOVE_BOOK);\n\n  // const { userData: userParam } = useParams();\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n  const {\n    loading,\n    data\n  } = useQuery(GET_ME, {\n    variables: {\n      userData\n    }\n  });\n  const user = (data === null || data === void 0 ? void 0 : data.me) || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async bookId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n    if (!token) {\n      return false;\n    }\n    try {\n      const response = await deleteBook(bookId, token);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"LOADING...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Jumbotron, {\n      fluid: true,\n      className: \"text-light bg-dark\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Viewing saved books!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: userData.savedBooks.length ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:` : 'You have no saved books!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardColumns, {\n        children: userData.savedBooks.map(book => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            border: \"dark\",\n            children: [book.image ? /*#__PURE__*/_jsxDEV(Card.Img, {\n              src: book.image,\n              alt: `The cover for ${book.title}`,\n              variant: \"top\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 31\n            }, this) : null, /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: book.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small\",\n                children: [\"Authors: \", book.authors]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: book.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-block btn-danger\",\n                onClick: () => handleDeleteBook(book.bookId),\n                children: \"Delete this Book!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, book.bookId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SavedBooks, \"gZGNBBzruGRUefZAGj9PgMf2mFU=\", true, function () {\n  return [useMutation];\n});\n_c = SavedBooks;\nexport default SavedBooks;\nvar _c;\n$RefreshReg$(_c, \"SavedBooks\");","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","useMutation","GET_ME","REMOVE_BOOK","Auth","removeBookId","jsxDEV","_jsxDEV","Fragment","_Fragment","SavedBooks","_s","userData","setUserData","deleteBook","error","bookData","userDataLength","Object","keys","length","loading","data","useQuery","variables","user","me","handleDeleteBook","bookId","token","loggedIn","getToken","response","ok","Error","updatedUser","json","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","fluid","className","savedBooks","map","book","border","image","Img","src","alt","title","variant","Body","Title","authors","Text","description","onClick","_c","$RefreshReg$"],"sources":["/Users/roddazad/bootcamp/myrepos/mern-graphql-api/graphql-API/client/src/pages/SavedBooks.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { GET_ME } from '../utils/queries';\nimport { REMOVE_BOOK } from '../utils/mutations';\n// import { Navigate, useParams } from 'react-router-dom';\n// import { getMe, deleteBook } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeBookId } from '../utils/localStorage';\n\nconst SavedBooks = () => {\n  const [userData, setUserData] = useState({});\n  const [deleteBook, { error, bookData }] = useMutation(REMOVE_BOOK);\n\n  // const { userData: userParam } = useParams();\n\n  // use this to determine if `useEffect()` hook needs to run again\n  const userDataLength = Object.keys(userData).length;\n\n  // useEffect(() => {\n  //   const getUserData = async () => {\n  //     try {\n  //       const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n  //       if (!token) {\n  //         return false;\n  //       }\n\n  //       const response = await getMe(token);\n\n  //       if (!response.ok) {\n  //         throw new Error('something went wrong!');\n  //       }\n\n  //       const user = await response.json();\n  //       setUserData(user);\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   };\n\n  //   getUserData();\n  // }, [userDataLength]);\n  const { loading, data } = useQuery(GET_ME, {\n    variables: { userData },\n  });\n  const user = data?.me || {};\n\n  // create function that accepts the book's mongo _id value as param and deletes the book from the database\n  const handleDeleteBook = async (bookId) => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBook(bookId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser);\n      // upon success, remove book's id from localStorage\n      removeBookId(bookId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  // if data isn't here yet, say so\n  if (!userDataLength) {\n    return <h2>LOADING...</h2>;\n  }\n\n  return (\n    <>\n      <Jumbotron fluid className='text-light bg-dark'>\n        <Container>\n          <h1>Viewing saved books!</h1>\n        </Container>\n      </Jumbotron>\n      <Container>\n        <h2>\n          {userData.savedBooks.length\n            ? `Viewing ${userData.savedBooks.length} saved ${userData.savedBooks.length === 1 ? 'book' : 'books'}:`\n            : 'You have no saved books!'}\n        </h2>\n        <CardColumns>\n          {userData.savedBooks.map((book) => {\n            return (\n              <Card key={book.bookId} border='dark'>\n                {book.image ? <Card.Img src={book.image} alt={`The cover for ${book.title}`} variant='top' /> : null}\n                <Card.Body>\n                  <Card.Title>{book.title}</Card.Title>\n                  <p className='small'>Authors: {book.authors}</p>\n                  <Card.Text>{book.description}</Card.Text>\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBook(book.bookId)}>\n                    Delete this Book!\n                  </Button>\n                </Card.Body>\n              </Card>\n            );\n          })}\n        </CardColumns>\n      </Container>\n    </>\n  );\n};\n\nexport default SavedBooks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,SAAS,EAAEC,WAAW,EAAEC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AACjF,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,WAAW,QAAQ,oBAAoB;AAChD;AACA;AACA,OAAOC,IAAI,MAAM,eAAe;AAChC,SAASC,YAAY,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAErD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACoB,UAAU,EAAE;IAAEC,KAAK;IAAEC;EAAS,CAAC,CAAC,GAAGf,WAAW,CAACE,WAAW,CAAC;;EAElE;;EAEA;EACA,MAAMc,cAAc,GAAGC,MAAM,CAACC,IAAI,CAACP,QAAQ,CAAC,CAACQ,MAAM;;EAEnD;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA,MAAM;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGC,QAAQ,CAACrB,MAAM,EAAE;IACzCsB,SAAS,EAAE;MAAEZ;IAAS;EACxB,CAAC,CAAC;EACF,MAAMa,IAAI,GAAG,CAAAH,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEI,EAAE,KAAI,CAAC,CAAC;;EAE3B;EACA,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;IACzC,MAAMC,KAAK,GAAGzB,IAAI,CAAC0B,QAAQ,EAAE,GAAG1B,IAAI,CAAC2B,QAAQ,EAAE,GAAG,IAAI;IAEtD,IAAI,CAACF,KAAK,EAAE;MACV,OAAO,KAAK;IACd;IAEA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMlB,UAAU,CAACc,MAAM,EAAEC,KAAK,CAAC;MAEhD,IAAI,CAACG,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;MAC1C;MAEA,MAAMC,WAAW,GAAG,MAAMH,QAAQ,CAACI,IAAI,EAAE;MACzCvB,WAAW,CAACsB,WAAW,CAAC;MACxB;MACA9B,YAAY,CAACuB,MAAM,CAAC;IACtB,CAAC,CAAC,OAAOS,GAAG,EAAE;MACZC,OAAO,CAACvB,KAAK,CAACsB,GAAG,CAAC;IACpB;EACF,CAAC;;EAED;EACA,IAAI,CAACpB,cAAc,EAAE;IACnB,oBAAOV,OAAA;MAAAgC,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAC5B;EAEA,oBACEpC,OAAA,CAAAE,SAAA;IAAA8B,QAAA,gBACEhC,OAAA,CAACX,SAAS;MAACgD,KAAK;MAACC,SAAS,EAAC,oBAAoB;MAAAN,QAAA,eAC7ChC,OAAA,CAACV,SAAS;QAAA0C,QAAA,eACRhC,OAAA;UAAAgC,QAAA,EAAI;QAAoB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAK;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACnB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACZpC,OAAA,CAACV,SAAS;MAAA0C,QAAA,gBACRhC,OAAA;QAAAgC,QAAA,EACG3B,QAAQ,CAACkC,UAAU,CAAC1B,MAAM,GACtB,WAAUR,QAAQ,CAACkC,UAAU,CAAC1B,MAAO,UAASR,QAAQ,CAACkC,UAAU,CAAC1B,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,OAAQ,GAAE,GACrG;MAA0B;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3B,eACLpC,OAAA,CAACT,WAAW;QAAAyC,QAAA,EACT3B,QAAQ,CAACkC,UAAU,CAACC,GAAG,CAAEC,IAAI,IAAK;UACjC,oBACEzC,OAAA,CAACR,IAAI;YAAmBkD,MAAM,EAAC,MAAM;YAAAV,QAAA,GAClCS,IAAI,CAACE,KAAK,gBAAG3C,OAAA,CAACR,IAAI,CAACoD,GAAG;cAACC,GAAG,EAAEJ,IAAI,CAACE,KAAM;cAACG,GAAG,EAAG,iBAAgBL,IAAI,CAACM,KAAM,EAAE;cAACC,OAAO,EAAC;YAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,GAAG,IAAI,eACpGpC,OAAA,CAACR,IAAI,CAACyD,IAAI;cAAAjB,QAAA,gBACRhC,OAAA,CAACR,IAAI,CAAC0D,KAAK;gBAAAlB,QAAA,EAAES,IAAI,CAACM;cAAK;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAc,eACrCpC,OAAA;gBAAGsC,SAAS,EAAC,OAAO;gBAAAN,QAAA,GAAC,WAAS,EAACS,IAAI,CAACU,OAAO;cAAA;gBAAAlB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAK,eAChDpC,OAAA,CAACR,IAAI,CAAC4D,IAAI;gBAAApB,QAAA,EAAES,IAAI,CAACY;cAAW;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAa,eACzCpC,OAAA,CAACP,MAAM;gBAAC6C,SAAS,EAAC,sBAAsB;gBAACgB,OAAO,EAAEA,CAAA,KAAMlC,gBAAgB,CAACqB,IAAI,CAACpB,MAAM,CAAE;gBAAAW,QAAA,EAAC;cAEvF;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QAAS;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACC;UAAA,GATHK,IAAI,CAACpB,MAAM;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAUf;QAEX,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACJ;EAAA,gBACX;AAEP,CAAC;AAAChC,EAAA,CApGID,UAAU;EAAA,QAE4BT,WAAW;AAAA;AAAA6D,EAAA,GAFjDpD,UAAU;AAsGhB,eAAeA,UAAU;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}